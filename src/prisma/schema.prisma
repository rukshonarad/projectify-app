datasource db {
    provider = "mongodb"
    url      = env("DB_URL")
}

generator client {
    provider = "prisma-client-js"
}

enum AccountStatus {
    ACTIVE
    INACTIVE
}

// Admin Model

enum TaskStatus {
    TODO
    INPROGRESS
    DONE
}

type Tasks {
    id          String
    title       String
    description String?
    due         DateTime
    status      TaskStatus @default(TODO)
}

model Admin {
    id                               String        @id @default(auto()) @map("_id") @db.ObjectId
    email                            String        @unique
    preferredFirstName               String?
    firstName                        String
    lastName                         String
    password                         String
    status                           AccountStatus @default(INACTIVE)
    activationToken                  String?
    passwordResetToken               String?
    passwordResetTokenExpirationDate DateTime?
    tasks                            Tasks[]
    createdAt                        DateTime      @default(now())
    updatedAt                        DateTime      @updatedAt
}

model Company {
    id        String   @id @default(auto()) @map("_id") @db.ObjectId
    name      String
    position  String
    adminId   String   @unique @db.ObjectId
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
}

// Project Model

enum ProjectStatus {
    ACTIVE
    ARCHIVED
}

model Project {
    id          String        @id @default(auto()) @map("_id") @db.ObjectId
    name        String
    description String
    status      ProjectStatus @default(ACTIVE)
    adminId     String        @db.ObjectId
    createdAt   DateTime      @default(now())
    updatedAt   DateTime      @updatedAt
}

// Team Member Model

model TeamMember {
    id                               String        @id @default(auto()) @map("_id") @db.ObjectId
    firstName                        String
    lastName                         String
    position                         String
    email                            String        @unique
    password                         String?
    status                           AccountStatus @default(INACTIVE)
    adminId                          String        @db.ObjectId
    inviteToken                      String?
    passwordResetToken               String?
    passwordResetTokenExpirationDate DateTime?
    createdAt                        DateTime      @default(now())
    updatedAt                        DateTime      @updatedAt
}

// Team Member Model

enum TeamMemberProjectStatus {
    ACTIVE
    INACTIVE
}

model TeamMemberProject {
    id           String                  @id @default(auto()) @map("_id") @db.ObjectId
    teamMemberId String                  @db.ObjectId
    projectId    String                  @db.ObjectId
    status       TeamMemberProjectStatus @default(ACTIVE)
    joinedAt     DateTime                @default(now())
}

// Story Model

enum StoryStatus {
    TODO
    INPROGRESS
    DONE
    ARCHIVED
}

enum SubTaskStatus {
    TODO
    INPROGRESS
    DONE
}

type SubTasks {
    id          String
    title       String
    description String?
    due         DateTime
    status      SubTaskStatus @default(TODO)
}

model Story {
    id        String @id @default(auto()) @map("_id") @db.ObjectId
    projectId String @db.ObjectId

    title       String
    description String?
    status      StoryStatus @default(TODO)
    point       Int?
    due         DateTime?
    assigneeId  String?     @db.ObjectId
    subTasks    SubTasks[]
    createdAt   DateTime    @default(now())
    updatedAt   DateTime    @updatedAt
}
